{
	"info": {
		"_postman_id": "fb58d8a6-4b14-44be-a6f5-8d5f2dfa9e98",
		"name": "DDSS REST API",
		"description": "A collection for testing the DDSS REST API endpoints implemented with Go Fiber.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Citizens",
			"item": [
				{
					"name": "Get All Citizens",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/citizens?limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"citizens"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Retrieve a list of citizens with optional limit parameter"
					}
				},
				{
					"name": "Get Citizen by ID",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/citizens/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"citizens",
								"{{citizenId}}"
							]
						},
						"description": "Retrieve a specific citizen by ID"
					}
				},
				{
					"name": "Create Citizen",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/citizens",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"citizens"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"simulated_id\": \"CIT123456\",\n    \"name\": \"John Doe\",\n    \"age\": 35,\n    \"residence_zone\": \"Z001\",\n    \"occupation\": \"Engineer\",\n    \"social_credit_score\": 750,\n    \"biometric_data\": {\n        \"facial_recognition_hash\": \"face123hash\",\n        \"dna_hash\": \"dna123hash\",\n        \"fingerprint_hash\": \"finger123hash\"\n    },\n    \"status\": \"Active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Create a new citizen"
					}
				},
				{
					"name": "Update Citizen",
					"request": {
						"method": "PUT",
						"url": {
							"raw": "http://localhost:8080/api/citizens/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"citizens",
								"{{citizenId}}"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"simulated_id\": \"{{citizenId}}\",\n    \"name\": \"John Doe\",\n    \"age\": 36,\n    \"residence_zone\": \"Z001\",\n    \"occupation\": \"Senior Engineer\",\n    \"social_credit_score\": 800,\n    \"biometric_data\": {\n        \"facial_recognition_hash\": \"face123hash\",\n        \"dna_hash\": \"dna123hash\",\n        \"fingerprint_hash\": \"finger123hash\"\n    },\n    \"status\": \"Active\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Update an existing citizen"
					}
				}
			],
			"description": "Endpoints for managing citizens"
		},
		{
			"name": "Blacklist",
			"item": [
				{
					"name": "Check Blacklist Status",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/blacklist/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blacklist",
								"{{citizenId}}"
							]
						},
						"description": "Check if a citizen is blacklisted"
					}
				},
				{
					"name": "Add to Blacklist",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/blacklist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blacklist"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"citizen_id\": \"{{citizenId}}\",\n    \"reason\": \"Subversive activities against the state\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Add a citizen to the blacklist"
					}
				},
				{
					"name": "Remove from Blacklist",
					"request": {
						"method": "DELETE",
						"url": {
							"raw": "http://localhost:8080/api/blacklist/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"blacklist",
								"{{citizenId}}"
							]
						},
						"description": "Remove a citizen from the blacklist"
					}
				}
			],
			"description": "Endpoints for managing blacklisted citizens"
		},
		{
			"name": "Whitelist",
			"item": [
				{
					"name": "Check Whitelist Status",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/whitelist/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"whitelist",
								"{{citizenId}}"
							]
						},
						"description": "Check if a citizen is whitelisted"
					}
				},
				{
					"name": "Add to Whitelist",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/whitelist",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"whitelist"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"citizen_id\": \"{{citizenId}}\",\n    \"reason\": \"Exceptional service to the state\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Add a citizen to the whitelist"
					}
				},
				{
					"name": "Remove from Whitelist",
					"request": {
						"method": "DELETE",
						"url": {
							"raw": "http://localhost:8080/api/whitelist/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"whitelist",
								"{{citizenId}}"
							]
						},
						"description": "Remove a citizen from the whitelist"
					}
				}
			],
			"description": "Endpoints for managing whitelisted citizens"
		},
		{
			"name": "Relationships",
			"item": [
				{
					"name": "Get Relationships",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/relationships/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"relationships",
								"{{citizenId}}"
							]
						},
						"description": "Get relationships for a citizen"
					}
				},
				{
					"name": "Create Relationship",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/relationships",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"relationships"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"source_id\": \"{{citizenId}}\",\n    \"target_id\": \"CIT654321\",\n    \"relationship_type\": \"Family\",\n    \"strength\": 8,\n    \"start_date\": \"2020-01-01T00:00:00Z\",\n    \"last_interaction\": \"2023-01-01T00:00:00Z\",\n    \"metadata\": {\n        \"specific_relation\": \"Parent\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Create a new relationship between citizens"
					}
				}
			],
			"description": "Endpoints for managing social relationships between citizens"
		},
		{
			"name": "Rules",
			"item": [
				{
					"name": "Get All Rules",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/rules",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rules"
							]
						},
						"description": "Get all rules (Note: This endpoint is not fully implemented)"
					}
				},
				{
					"name": "Get Rule by ID",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/rules/{{ruleId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rules",
								"{{ruleId}}"
							]
						},
						"description": "Get a specific rule by ID"
					}
				},
				{
					"name": "Create Rule",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/rules",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"rules"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rule_id\": \"R001\",\n    \"title\": \"Curfew\",\n    \"description\": \"All citizens must be in their residence between 22:00 and 05:00\",\n    \"punishment_tier\": 2,\n    \"applicable_zones\": [\"Z001\", \"Z002\"],\n    \"applicable_citizen_tiers\": [\"TIER1\", \"TIER2\", \"TIER3\"],\n    \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Create a new rule"
					}
				}
			],
			"description": "Endpoints for managing rules and regulations"
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Get Transactions",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/transactions/{{citizenId}}?limit=20",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"transactions",
								"{{citizenId}}"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						},
						"description": "Get transactions for a citizen with optional limit"
					}
				},
				{
					"name": "Create Transaction",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/transactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"transactions"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transaction_id\": \"T0001\",\n    \"citizen_id\": \"{{citizenId}}\",\n    \"transaction_type\": \"Purchase\",\n    \"amount\": 50.75,\n    \"currency\": \"SocialCredit\",\n    \"timestamp\": \"2023-03-15T14:30:00Z\",\n    \"merchant\": \"State Food Supply\",\n    \"items\": [\n        {\n            \"item_id\": \"FOOD001\",\n            \"description\": \"Weekly food ration\",\n            \"quantity\": 1,\n            \"price\": 50.75\n        }\n    ],\n    \"metadata\": {\n        \"location\": \"Supply Center Z001-SC5\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Record a new transaction"
					}
				}
			],
			"description": "Endpoints for managing financial transactions"
		},
		{
			"name": "Zones",
			"item": [
				{
					"name": "Check Zone Access",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/zones/{{citizenId}}/{{zoneId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"zones",
								"{{citizenId}}",
								"{{zoneId}}"
							]
						},
						"description": "Check if a citizen has access to a specific zone"
					}
				},
				{
					"name": "Set Zone Access",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/zones",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"zones"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"citizen_id\": \"{{citizenId}}\",\n    \"zone_id\": \"{{zoneId}}\",\n    \"permitted\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Set zone access for a citizen"
					}
				}
			],
			"description": "Endpoints for managing zone access permissions"
		},
		{
			"name": "Security Clearance",
			"item": [
				{
					"name": "Get Security Clearance",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/security/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"security",
								"{{citizenId}}"
							]
						},
						"description": "Get security clearance level for a citizen"
					}
				},
				{
					"name": "Set Security Clearance",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/security",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"security"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"citizen_id\": \"{{citizenId}}\",\n    \"clearance\": \"LEVEL3\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Set security clearance for a citizen"
					}
				}
			],
			"description": "Endpoints for managing security clearance levels"
		},
		{
			"name": "Tiers",
			"item": [
				{
					"name": "Get Citizen Tier",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/tiers/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tiers",
								"{{citizenId}}"
							]
						},
						"description": "Get social tier for a citizen"
					}
				},
				{
					"name": "Set Citizen Tier",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/tiers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tiers"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"citizen_id\": \"{{citizenId}}\",\n    \"tier\": \"TIER2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Set social tier for a citizen"
					}
				}
			],
			"description": "Endpoints for managing social tiers"
		},
		{
			"name": "Reeducation",
			"item": [
				{
					"name": "Get Reeducation Status",
					"request": {
						"method": "GET",
						"url": {
							"raw": "http://localhost:8080/api/reeducation/{{citizenId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reeducation",
								"{{citizenId}}"
							]
						},
						"description": "Get reeducation status for a citizen"
					}
				},
				{
					"name": "Set Reeducation Status",
					"request": {
						"method": "POST",
						"url": {
							"raw": "http://localhost:8080/api/reeducation",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reeducation"
							]
						},
						"body": {
							"mode": "raw",
							"raw": "{\n    \"citizen_id\": \"{{citizenId}}\",\n    \"status\": \"IN_PROGRESS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"description": "Set reeducation status for a citizen"
					}
				}
			],
			"description": "Endpoints for managing reeducation status"
		}
	],
	"variable": [
		{
			"key": "citizenId",
			"value": "CIT123456"
		},
		{
			"key": "zoneId",
			"value": "Z001"
		},
		{
			"key": "ruleId",
			"value": "R001"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
} 