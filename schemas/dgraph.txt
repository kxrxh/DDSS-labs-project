type Citizen {
  id: ID!
  name: String! @search(by: [exact, term])
  nationalID: String! @search(by: [exact])
  currentScore: Int
  scoreHistory: [ScoreChange]
  family: [Citizen] @hasInverse(field: family)
  colleagues: [Citizen] @hasInverse(field: colleagues)
  friends: [Citizen] @hasInverse(field: friends)
  location: GeoLocation
  associationRiskFactor: Float
  lastUpdated: DateTime
}

type ScoreChange {
  id: ID!
  timestamp: DateTime!
  oldScore: Int!
  newScore: Int!
  changeAmount: Int!
  reason: String
  relatedEvent: EventID
}

type GeoLocation {
  id: ID!
  region: String @search(by: [exact, term])
  city: String @search(by: [exact, term])
  district: String @search(by: [exact])
  coordinates: Point
}

type EventID {
  id: ID!
  sourceSystem: String!
  eventType: String! @search(by: [exact])
  externalID: String!
}

# Директивы для геоданных
type Point @extends {
  point: Point @index(point)
}
